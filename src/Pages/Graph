/* import React, { useEffect, useState } from 'react';
import { Bar, Line } from 'react-chartjs-2';
import 'chart.js/auto';

const CryptoPrices = () => {
  const [cryptoData, setCryptoData] = useState([]);

  useEffect(() => {
    const fetchCryptoData = async () => {
      try {
        const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin,ethereum,ripple,tether', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        });
        const data = await response.json();
        setCryptoData(data);
        console.log(data);
      } catch (error) {
        console.error('Error fetching the crypto data:', error);
      }
    };

    fetchCryptoData();
  }, []);

  const data = {
    labels: cryptoData.map(crypto => crypto.name),
    datasets: [
      {
        label: 'Price (USD)',
        data: cryptoData.map(crypto => crypto.current_price),
        backgroundColor: 'rgba(75, 192, 192, 0.6)',
        borderColor: 'rgba(75, 192, 192, 1)',
        borderWidth: 1
      },
      {
        label: 'Market Cap (USD)',
        data: cryptoData.map(crypto => crypto.market_cap / 1e12), // converting to trillion for consistency with original JSON
        backgroundColor: 'rgba(153, 102, 255, 0.6)',
        borderColor: 'rgba(153, 102, 255, 1)',
        borderWidth: 1
      }
    ]
  };

  return (
    <div>
      <h1>Cryptocurrency Prices and Market Cap</h1>
      <table>
        <thead>
          <tr>
            <th>Name</th>
            <th>Price (USD)</th>
            <th>Market Cap (Trillion USD)</th>
          </tr>
        </thead>
        <tbody>
          {cryptoData.map((crypto) => (
            <tr key={crypto.id}>
              <td>{crypto.name}</td>
              <td>${crypto.current_price.toLocaleString()}</td>
              <td>${(crypto.market_cap / 1e12).toFixed(2)}</td>
            </tr>
          ))}
        </tbody>
      </table>
      <h2>Chart</h2>
      <div className=' h-[600px] w-[600px]'>
        <Line data={data} />
        <Bar data={data} />
      </div>
    </div>
  );
};

export default CryptoPrices; */